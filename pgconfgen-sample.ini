; Sample commented ini file for pgconfgen.
; Each section describes one separate output file.
; Jinja templating receives dict variable 'rows' that contains
; all values from the sql query. The dict key names are equal to
; the table_cols parameter in respective section.

[main]

db_connstring = host=10.10.10.10 port=6432 user=pdns password=VerySecretPass dbname=pdns connect_timeout=3

; if DB is down, how long to wait until retry
db_retry_timeout=30

; check for DB connection alive
; (also, every 50 keepalives, pgconfgen will check all DB tables for changes)
db_keepalive=900

; first argument of pg_notify(notify_channel, notify_payload)
notify_channel= pdns_notify


; Section names are the second argument to pg_notify - notify_payload.
; That means the tuple (notify_channel, section name) identifies
; which config file should be updated)
[domains_modified]

jinja_template = /etc/pgconfgen/forward-zones.conf.j2

; pgconfgen will not overwrite the file if if didn't change after update
outfile  = /etc/recursor.conf.d/forward-zones.conf

; What user/group/perms to set on outfile (ignored if unset).
;outfile_user = my_user
;outfile_group = nobody
;outfile_mode = 640

; Optional command. Comment out or leave empty to disable reloading.
reload_command = rec_control reload-zones | grep -vq failed

; table name to search for
table_name = domains

; columns to select from the table_name
table_cols =name


[recursor_cfg_modified]
jinja_template = /etc/pgconfgen/generic.conf.j2
outfile  = /etc/recursor.conf.d/extra.conf
reload_command = systemctl reload pdns-recursor
table_name = cfg_recursor
table_cols = key, val

[pdns_cfg_modified]
jinja_template = /etc/pgconfgen/generic.conf.j2
outfile  = /etc/pdns.conf.d/extra.conf
reload_command = systemctl reload pdns
table_name = cfg_pdns
table_cols = key, value
